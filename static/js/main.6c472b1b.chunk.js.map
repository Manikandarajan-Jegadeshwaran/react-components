{"version":3,"sources":["logo.svg","components/custom-tree/tree-view.js","components/custom-tree/tree-item.js","sample/custom-tree.js","sample/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useTreeViewStyles","makeStyles","theme","container","paddingLeft","props","parent","marginLeft","borderLeft","React","memo","children","classes","className","defaultExpanded","useTreeItemStyles","treeItem","display","flexDirection","listStyle","width","listContent","alignItems","color","borderTopRightRadius","borderBottomRightRadius","defaultItem","background","selectedItem","defaultIcon","pointer","cursor","listIcon","margin","listMarginLeft","listLable","label","icon","expandIcon","collapseIcon","defaultOpen","useState","open","setOpen","handleClick","e","stopPropagation","CloseSquare","SvgIcon","fontSize","d","useEffect","clsx","ButtonBase","Grid","item","xs","onClick","currentTarget","parentElement","style","handleMenuSelection","onDoubleClick","Icon","Typography","Collapse","in","timeout","unmountOnExit","useStyles","padding","height","overflow","position","showWindow","top","right","minWidth","minHeight","justifyContent","backdropFilter","boxShadow","contents","title","border","src","process","alt","setSelectedItem","renderItem","content","index","key","length","map","child","childIndex","homeBg","glass","nav","textAlign","menu","setMenu","RenderListItem","ListItem","selected","name","button","handleListItemSelection","ListItemText","primary","CssBaseline","Container","fixed","backgroundColor","List","component","aria-labelledby","subheader","ListSubheader","id","root","idx","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c472b1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useTreeViewStyles = makeStyles(theme => ({\r\n    container: {\r\n        paddingLeft: props => props.parent ? 0 : 13,\r\n        marginLeft: props => props.parent ? 0 : 12,\r\n        borderLeft: props => !props.parent && '1px dashed #0000004d'\r\n    }\r\n}));\r\n\r\nfunction TreeView(props) {\r\n    const { children } = props;\r\n    const classes = useTreeViewStyles(props);\r\n    return (\r\n        <ul className={classes.container}>\r\n            {\r\n                children\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(TreeView);","import React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Label from '@material-ui/icons/Label';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport TreeView from './tree-view';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\n\r\nconst defaultExpanded = false;\r\n\r\nconst useTreeItemStyles = makeStyles(theme => ({\r\n    treeItem: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        listStyle: 'none',\r\n        width: 'inherit'\r\n    },\r\n    listContent: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        //minHeight: '3rem',\r\n        color: '#0000004d',\r\n        '&:hover': {\r\n            //background: '#eae5e5',\r\n            borderTopRightRadius: 15,\r\n            borderBottomRightRadius: 15\r\n        },\r\n        '-webkit-user-select': 'none',\r\n        '-moz-user-select': '-moz-none',\r\n        '-ms-user-select': 'none',\r\n        'user-select': 'none'\r\n    },\r\n    defaultItem: {\r\n        background: '#f5f5f5',\r\n    },\r\n    selectedItem: {\r\n        background: '#eae5e5',\r\n        borderTopRightRadius: 15,\r\n        borderBottomRightRadius: 15\r\n    },\r\n    defaultIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    pointer: {\r\n        cursor: 'pointer'\r\n    },\r\n    listIcon: {\r\n        margin: props => props.children ? '0 5px 0 2px' : '0px 5px 0 5px'\r\n    },\r\n    listMarginLeft: {\r\n        marginLeft: 6\r\n    },\r\n    listLable: {\r\n        display: 'flex'\r\n    }\r\n}));\r\n\r\nfunction TreeItem(props) {\r\n    const { children, label, icon, expandIcon, collapseIcon, defaultOpen } = props;\r\n    const classes = useTreeItemStyles(props);\r\n\r\n    const [open, setOpen] = useState(defaultExpanded);\r\n    const [selectedItem, setSelectedItem] = useState();\r\n\r\n    React.useEffect(() => {\r\n        if (defaultOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [defaultOpen]);\r\n\r\n    function handleClick(e) {\r\n        if (!children)\r\n            return;\r\n\r\n        setOpen(!open);\r\n        e.stopPropagation();\r\n    }\r\n\r\n    function handleMenuSelection(e, label) {\r\n        e.currentTarget.parentElement.style = {\r\n            background: '#eae5e5',\r\n            borderTopRightRadius: 15,\r\n            borderBottomRightRadius: 15\r\n        }\r\n\r\n        if (props.onClick) {\r\n            props.onClick();\r\n        }\r\n    }\r\n\r\n    function CloseSquare(props) {\r\n        return (\r\n            <SvgIcon className=\"close\" fontSize=\"inherit\" {...props}>\r\n                {/* tslint:disable-next-line: max-line-length */}\r\n                <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n            </SvgIcon>\r\n        );\r\n    }\r\n\r\n    function li() {\r\n        return (\r\n            <ButtonBase className={classes.listContent}>\r\n                <Grid container\r\n                    className={\r\n                        clsx(\r\n                            \r\n                            !children && classes.listMarginLeft,\r\n                            //selectedItem === label ? classes.selectedItem : classes.defaultItem\r\n                        )\r\n                    }\r\n                >\r\n\r\n                    <Grid item xs={12} className={classes.defaultIcon} onClick={(e) => handleMenuSelection(e, label)} onDoubleClick={handleClick}>\r\n                        {\r\n                            children\r\n                                ? <Icon //color=\"#707070\"\r\n                                    children={\r\n                                        open\r\n                                            ? expandIcon || <ArrowDropDownIcon />\r\n                                            : collapseIcon || <ArrowRightIcon />\r\n                                    }\r\n                                    onClick={handleClick}\r\n                                />\r\n                                : <CloseSquare />\r\n                        }\r\n                        {\r\n                            <Icon children={icon || <Label />} className={classes.listIcon} />\r\n                        }\r\n                        <Typography color=\"primary\">{label}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </ButtonBase>\r\n        );\r\n    }\r\n\r\n    function ul() {\r\n        return (\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <TreeView>\r\n                    {\r\n                        children\r\n                    }\r\n                </TreeView>\r\n            </Collapse>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <li className={clsx(classes.treeItem, classes.pointer)}>\r\n            {\r\n                li()\r\n            }\r\n            {\r\n                children && ul()\r\n            }\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(TreeItem);","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { TreeView, TreeItem} from '../components/custom-tree/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        background: '#f5f5f561',\r\n        //marginRight: 15,\r\n        padding: '10px 20px',\r\n        //margin: 10,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n        position:'relative'\r\n    },\r\n    showWindow:{\r\n        position:'absolute',\r\n        top:0,\r\n        right:0,\r\n        minWidth:'33%',\r\n        minHeight:'33%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        background:'#ffffffbd',\r\n        backdropFilter: 'saturate(180%) blur(20px)',\r\n        boxShadow:'0px 0px 3px 1px #ccc'\r\n    }\r\n}));\r\n\r\nconst contents = [\r\n    {\r\n        title:'Fruits', \r\n        children:[\r\n            {title:'Orange'},\r\n            {title:'Apple'}\r\n        ]\r\n    },\r\n    {\r\n        title:'Animal', \r\n        children:[\r\n            {\r\n                title:'Land Animal',\r\n                children:[\r\n                    {title:'Lion'},\r\n                    {title:'Tiger'},\r\n                    {title:'Ape'}\r\n                ]\r\n            },\r\n            {\r\n                title:'Water Animal',\r\n                children:[\r\n                    {\r\n                        title:<div>\r\n                            <table style={{border:'1px solid #ccc'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Name\r\n                                        </th>\r\n                                        <th>\r\n                                            Life span\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        Whale\r\n                                    </td>\r\n                                    <td>\r\n                                        40 yrs\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        Shark\r\n                                    </td>\r\n                                    <td>\r\n                                        30 yrs\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        Squid\r\n                                    </td>\r\n                                    <td>\r\n                                        10 yrs\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'Human'\r\n    },\r\n    {\r\n        title:'Robots',\r\n        children:[\r\n            {\r\n                title:<img \r\n                src={`${process.env.PUBLIC_URL}/assets/images/robot.png`}\r\n                width=\"300\"\r\n                height=\"200\"\r\n                alt=\"robot\"\r\n                />\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nfunction CustomTree(props){\r\n    const classes = useStyles();\r\n    const [selectedItem, setSelectedItem] = useState('Preview');\r\n    function handleClick(content){\r\n        setSelectedItem(content.title)\r\n    }\r\n\r\n    function renderItem(content, index, fromTrueParent = undefined){\r\n        return (\r\n            <TreeItem\r\n            key={index}\r\n            label={content.title}\r\n            onClick={() => handleClick(content)}\r\n            >\r\n                {\r\n                    content.children && \r\n                    content.children.length>0 &&\r\n                    content.children.map((child,childIndex)=>renderItem(child,childIndex))\r\n                }\r\n            </TreeItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <TreeView parent>\r\n                {\r\n                    contents &&\r\n                    contents.map((content,index)=>renderItem(content,index,true))\r\n                }\r\n            </TreeView>\r\n            <div className={classes.showWindow}>\r\n                {\r\n                    selectedItem\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(CustomTree);","import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { CustomTree } from './index';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    homeBg:{\r\n        background:'linear-gradient(163deg,#0099e5 17%,#34bf49 100%)'\r\n    },\r\n    glass:{\r\n        backdropFilter: 'saturate(180%) blur(20px)',\r\n        background: '#ffffffbd',//'#e8e8e8',\r\n    },\r\n    nav:{\r\n        textAlign:'left'\r\n    }\r\n}));\r\n\r\nfunction Home(props){\r\n    const classes = useStyles();\r\n    const [ menu, setMenu] = useState('Tree view');\r\n\r\n    function handleListItemSelection(e, menu){\r\n        setMenu(menu);\r\n    }\r\n\r\n    function RenderListItem(props){\r\n        return (\r\n            <ListItem selected={menu === props.name} button onClick={e=>handleListItemSelection(e,props.name)}>\r\n                <ListItemText primary={props.name} />\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.homeBg}>\r\n           <div className={classes.glass}>\r\n           <CssBaseline />\r\n                <Container fixed>\r\n                    <Grid container style={{ backgroundColor: '#ffffffd4', height: '100vh' }}>\r\n                        <Grid item xs={4}>\r\n                            <List\r\n                            className={classes.nav}\r\n                            component=\"nav\"\r\n                            aria-labelledby=\"nested-list-subheader\"\r\n                            subheader={\r\n                                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                    Components\r\n                                </ListSubheader>\r\n                            }\r\n                            className={classes.root}\r\n                            >\r\n                                {\r\n                                    [\r\n                                        'Tree view',\r\n                                        'Table'\r\n                                    ].map((content,idx) => <RenderListItem key={idx} name={content}/>)\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            {\r\n                                menu ==='Tree view' &&\r\n                                <CustomTree/>\r\n                            }\r\n                            {\r\n                                menu === 'Table' &&\r\n                                <span>no component found</span>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n           </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default React.memo(Home);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Home } from './sample/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}